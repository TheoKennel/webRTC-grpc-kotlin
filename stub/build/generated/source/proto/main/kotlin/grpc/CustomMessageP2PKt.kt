// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: grpc/messageP2p.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package grpc;

@kotlin.jvm.JvmName("-initializecustomMessageP2P")
public inline fun customMessageP2P(block: grpc.CustomMessageP2PKt.Dsl.() -> kotlin.Unit): grpc.CustomMessageP2P =
  grpc.CustomMessageP2PKt.Dsl._create(grpc.CustomMessageP2P.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `grpc.CustomMessageP2P`
 */
public object CustomMessageP2PKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: grpc.CustomMessageP2P.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: grpc.CustomMessageP2P.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): grpc.CustomMessageP2P = _builder.build()

    /**
     * `.grpc.SignalingCommand signalingCommand = 1;`
     */
    public var signalingCommand: grpc.SignalingCommand
      @JvmName("getSignalingCommand")
      get() = _builder.getSignalingCommand()
      @JvmName("setSignalingCommand")
      set(value) {
        _builder.setSignalingCommand(value)
      }
    public var signalingCommandValue: kotlin.Int
      @JvmName("getSignalingCommandValue")
      get() = _builder.getSignalingCommandValue()
      @JvmName("setSignalingCommandValue")
      set(value) {
        _builder.setSignalingCommandValue(value)
      }
    /**
     * `.grpc.SignalingCommand signalingCommand = 1;`
     */
    public fun clearSignalingCommand() {
      _builder.clearSignalingCommand()
    }

    /**
     * `string message = 2;`
     */
    public var message: kotlin.String
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * `string message = 2;`
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
public inline fun grpc.CustomMessageP2P.copy(block: `grpc`.CustomMessageP2PKt.Dsl.() -> kotlin.Unit): grpc.CustomMessageP2P =
  `grpc`.CustomMessageP2PKt.Dsl._create(this.toBuilder()).apply { block() }._build()

