// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: grpc/signaling.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package grpc;

@kotlin.jvm.JvmName("-initializesignalingMessage")
public inline fun signalingMessage(block: grpc.SignalingMessageKt.Dsl.() -> kotlin.Unit): grpc.SignalingMessage =
  grpc.SignalingMessageKt.Dsl._create(grpc.SignalingMessage.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `grpc.SignalingMessage`
 */
public object SignalingMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: grpc.SignalingMessage.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: grpc.SignalingMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): grpc.SignalingMessage = _builder.build()

    /**
     * `string senderId = 1;`
     */
    public var senderId: kotlin.String
      @JvmName("getSenderId")
      get() = _builder.getSenderId()
      @JvmName("setSenderId")
      set(value) {
        _builder.setSenderId(value)
      }
    /**
     * `string senderId = 1;`
     */
    public fun clearSenderId() {
      _builder.clearSenderId()
    }

    /**
     * `string targetId = 2;`
     */
    public var targetId: kotlin.String
      @JvmName("getTargetId")
      get() = _builder.getTargetId()
      @JvmName("setTargetId")
      set(value) {
        _builder.setTargetId(value)
      }
    /**
     * `string targetId = 2;`
     */
    public fun clearTargetId() {
      _builder.clearTargetId()
    }

    /**
     * `string type = 3;`
     */
    public var type: kotlin.String
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * `string type = 3;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * `string sdpOrCandidate = 4;`
     */
    public var sdpOrCandidate: kotlin.String
      @JvmName("getSdpOrCandidate")
      get() = _builder.getSdpOrCandidate()
      @JvmName("setSdpOrCandidate")
      set(value) {
        _builder.setSdpOrCandidate(value)
      }
    /**
     * `string sdpOrCandidate = 4;`
     */
    public fun clearSdpOrCandidate() {
      _builder.clearSdpOrCandidate()
    }
  }
}
public inline fun grpc.SignalingMessage.copy(block: `grpc`.SignalingMessageKt.Dsl.() -> kotlin.Unit): grpc.SignalingMessage =
  `grpc`.SignalingMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

